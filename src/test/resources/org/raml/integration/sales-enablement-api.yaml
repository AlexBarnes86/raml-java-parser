#%RAML 0.2
---
title: Sales Enablement API
version: v1
baseUri: http://api.muse-demo.com
schemas:
  presentation: |
    {  "$schema": "http://json-schema.org/draft-03/schema",
       "type": "object",
       "description": "A customer presentation",
       "properties": {
         "title":  { "type": "string" },
         "description":  { "type": "string" },
         "fileUrl":  { "type": "string" },
         "region": { "type": "string" }
       }
       "required": [ "title", "artist" ]
    }
  customer: |
    {  "$schema": "http://json-schema.org/draft-03/schema",
       "type": "object",
       "description": "A customer",
       "properties": {
         "name":  { "type": "string" },
         "contact":  { "type": "string" },
         "region": { "type": "string" }
       }
       "required": [ "title", "artist" ]
    }
resourceTypes:
  - base:
      get?:
        responses: &standardResponses
          200:
            description: OK
      put?:
        responses: *standardResponses
      patch?:
        responses: *standardResponses
      post?:
        responses: *standardResponses
      delete?:
        responses: *standardResponses
  - collection:
      type: base
      get:
        is: [ paged ]
      post:
        responses:
          201:
            description: Created
  - typedCollection:
      type: base
      get:
        is: [ paged ]
        responses:
          200:
            body:
              application/json:
                schema: <<schema>>
      post:
        body:
          application/json:
            schema: <<schema>>
        responses:
          200:
            body:
              application/json:
                schema: <<schema>>
  - member:
      type: base
      get:
      put:
      patch:
      delete:
  - typedMember:
      type: base
      get:
        responses:
          200:
            body:
              application/json:
                schema: <<schema>>
      put:
        body:
          application/json:
            schema: <<schema>>
        responses:
          200:
            body:
              application/json:
                schema: <<schema>>
      patch:
        body:
          application/json:
            schema: <<schema>>
        responses:
          200:
            body:
              application/json:
                schema: <<schema>>
      delete: {}
traits:
  - paged:
      displayName: paged
      queryParameters:
        start:
          displayName: start
          description: The first page to return
          type: number
        pages:
          displayName: pages
          description: The number of pages to return
          type: number
  - secured:
      displayName: secured
      headers:
        Authorization:
          description: The auth token for this request
      responses:
        401:
          description: Unauthorized
/presentations: &presentations
  type: { typedCollection: { schema: presentation } }
  is: [ secured ]
  get:
    queryParameters:
      region:
        type: string
        displayName: region
        description: Filter by region
  /{presentationId}:
    type: { typedMember: { schema: presentation } }
    is: [ secured ]
/customers:
  type: { typedCollection: { schema: customer } }
  is: [ secured ]
  get:
    queryParameters:
      region:
        type: string
        displayName: region
        description: Filter by region
  /{customerId}:
    type: { typedMember: { schema: customer } }
    is: [ secured ]
    /presentations: *presentations
